name: Azure Continuous Delivery yaml
on:
  workflow_dispatch:
    inputs:
      IMAGE_REPOSITORY:
        description: 'Repository of the image (same as declared in App Service creation)'
        required: true
        default: 'vise-api'
      IMAGE_TAG:
        description: 'Tag of the image'
        required: true
        default: 'latest'
      AZURE_WEBAPP_NAME:
        description: 'Nombre del App Service creado en Azure'
        required: true
      PORT:
        description: 'Port of the application'
        default: '443'
        required: true

env:
  IMAGE_REGISTRY: ${{ secrets.ACR_NAME_DARIO }}.azurecr.io
  IMAGE_NAME: ${{ github.event.inputs.IMAGE_REPOSITORY }}
  IMAGE_TAG: ${{ github.event.inputs.IMAGE_TAG }}
  IMAGE_URL: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

jobs:
  build-and-push-image:
    name: 'Build and Push to ACR'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.ACR_NAME_DARIO }}
          password: ${{ secrets.ACR_PASSWORD_DARIO }}

      - name: Build and Push to ACR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}

  deploy:
    name: 'Deploy remote container to Azure'
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Deploy to Azure Web App for Container
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.event.inputs.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DARIO }}
          images: ${{ env.IMAGE_URL }}

  test-deploy:
    name: 'Test deployed service'
    runs-on: ubuntu-latest
    needs: [build-and-push-image, deploy]
    steps:
      - name: Checkout session.hurl
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            session.hurl
          sparse-checkout-cone-mode: false

      - name: Setup hurl (API testing tool)
        uses: gacts/install-hurl@v1

      - name: Test API
        run: |
          hurl --variable host=https://${{ github.event.inputs.AZURE_WEBAPP_NAME }}.azurewebsites.net:${{ github.event.inputs.PORT }} \
               --connect-timeout 20s --error-format long --verbose --test session.hurl
